// <auto-generated />
using System;
using Assignment3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment3.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20220204182259_SeedingDatabase")]
    partial class SeedingDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment3.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Iron Man",
                            CharacterName = "Tony Stark",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 2,
                            Alias = "",
                            CharacterName = "Thor",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Spider Man",
                            CharacterName = "Peter Parker",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 4,
                            Alias = "",
                            CharacterName = "Black Widow",
                            Gender = "Female",
                            Picture = ""
                        },
                        new
                        {
                            Id = 5,
                            Alias = "Strider",
                            CharacterName = "Aragorn",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 6,
                            Alias = "",
                            CharacterName = "Legolas",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 7,
                            Alias = "",
                            CharacterName = "Gimli",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 8,
                            Alias = "The boy who lived",
                            CharacterName = "Harry Potter",
                            Gender = "Male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 9,
                            Alias = "",
                            CharacterName = "Hermoine Granger",
                            Gender = "Female",
                            Picture = ""
                        },
                        new
                        {
                            Id = 10,
                            Alias = "",
                            CharacterName = "Ron Weasly",
                            Gender = "Male",
                            Picture = ""
                        });
                });

            modelBuilder.Entity("Assignment3.Models.CharacterMovie", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CharacterMovies");
                });

            modelBuilder.Entity("Assignment3.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Superheroes that always somehow manages to save the world",
                            Name = "Marvel"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The best trilogy ever made.",
                            Name = "Lord of the Rings"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wizard boy goes to school, but something goes wrong every year",
                            Name = "Harry Potter"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Joss Whedon",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_UY1200_CR90,0,630,1200_AL_.jpg",
                            ReleaseYear = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Avengers",
                            Trailer = "https://www.youtube.com/watch?v=eOrNdBpGMv8"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Taika Waititi",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "https://www.bing.com/th?id=A70092af279de08fc0762746dbdc6be61&w=113&h=170&c=7&o=6&dpr=1.5&pid=SANGAM",
                            ReleaseYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Thor: Ragnarok",
                            Trailer = "https://www.youtube.com/watch?v=ue80QwXMRHg"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Jon Watts",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "https://www.bing.com/th?id=Acd021478a99c6e1a187ebda0f186c36e&w=113&h=170&c=7&o=6&dpr=1.5&pid=SANGAM",
                            ReleaseYear = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spiderman: No way home",
                            Trailer = "https://www.youtube.com/watch?v=JfVOs4VSpmA"
                        },
                        new
                        {
                            Id = 4,
                            Director = "Peter Jackson",
                            FranchiseId = 2,
                            Genre = "Fantasy",
                            Picture = "https://www.bing.com/th?id=Acd16d948d57a0e5c13b41182f01a9603&w=113&h=170&c=7&o=6&dpr=1.5&pid=SANGAM",
                            ReleaseYear = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lord of the Rings: The Fellowship of the Ring",
                            Trailer = "https://www.youtube.com/watch?v=cKEGZ-CvWHk"
                        },
                        new
                        {
                            Id = 5,
                            Director = "Peter Jackson",
                            FranchiseId = 2,
                            Genre = "Fantasy",
                            Picture = "https://www.bing.com/th?id=Ac317d10bbc9daae44750cb84536c5802&w=113&h=170&c=7&o=6&dpr=1.5&pid=SANGAM",
                            ReleaseYear = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lord of the Rings: The Two Towers",
                            Trailer = "https://www.youtube.com/watch?v=LbfMDwc4azU"
                        },
                        new
                        {
                            Id = 6,
                            Director = "Peter Jackson",
                            FranchiseId = 2,
                            Genre = "Fantasy",
                            Picture = "https://www.bing.com/th?id=A3bad55d4843d18e2809ce35612614455&w=113&h=170&c=7&o=6&dpr=1.5&pid=SANGAM",
                            ReleaseYear = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lord of the Rings: The Return of the King",
                            Trailer = "https://www.youtube.com/watch?v=KOQSQaGgJxs"
                        },
                        new
                        {
                            Id = 7,
                            Director = "Chris Colombus",
                            FranchiseId = 3,
                            Genre = "Fantasy",
                            Picture = "https://www.bing.com/th?id=Ab77398b331e251965a55ab9e9a2dfbd7&w=113&h=170&c=7&o=6&dpr=1.5&pid=SANGAM",
                            ReleaseYear = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Harry Potter and the Philosopher's Stone",
                            Trailer = "https://www.youtube.com/watch?v=6kkUw717s2w"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.CharacterMovie", b =>
                {
                    b.HasOne("Assignment3.Models.Character", "Character")
                        .WithMany("CharacterMovies")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment3.Models.Movie", "Movie")
                        .WithMany("CharacterMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Assignment3.Models.Movie", b =>
                {
                    b.HasOne("Assignment3.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("Assignment3.Models.Character", b =>
                {
                    b.Navigation("CharacterMovies");
                });

            modelBuilder.Entity("Assignment3.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Assignment3.Models.Movie", b =>
                {
                    b.Navigation("CharacterMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
